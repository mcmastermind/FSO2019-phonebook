{"version":3,"sources":["components/Notification.js","components/Filter.js","components/PersonForm.js","components/Button.js","components/Person.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Notification","message","className","Filter","filterTerm","handleFilterChange","value","type","onChange","Form","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","Button","text","onClick","Person","name","number","handleDeleteClick","Persons","persons","length","filter","person","toLowerCase","indexOf","map","key","id","baseUrl","axios","get","then","response","newObject","post","data","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilterTerm","notificationMessage","setNotificationMessage","notificationClass","setNotificationClass","useEffect","console","log","personService","event","target","PersonForm","preventDefault","isInPhonebook","forEach","window","confirm","personObj","find","returnedPerson","Object","assign","catch","error","setTimeout","personObject","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f04d9d43.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Filter = ({ filterTerm, handleFilterChange }) => {\r\n\r\n    return (\r\n        <div>\r\n            Filter shown with <input value={filterTerm} type='text' onChange={handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>*Name:</td>\r\n                        <td><input value={newName} onChange={handleNameChange} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>*Number:</td>\r\n                        <td><input value={newNumber} onChange={handleNumberChange} /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button type=\"submit\">Add to Phonebook</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Button = ({ text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Person = ({ name, number, handleDeleteClick }) => {\r\n\r\n    return (\r\n        <div>\r\n            {name} - {number} <Button onClick={handleDeleteClick} text='Delete'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, filterTerm, handleDeleteClick }) => {\r\n\r\n    const rows = () => {\r\n        if (filterTerm.length > 0) {\r\n            let copy = persons.filter(person => person.name.toLowerCase().indexOf(filterTerm.toLowerCase()) > -1)\r\n            return copy.map(person => <Person key={person.id} name={person.name} number={person.number} handleDeleteClick={() => handleDeleteClick(person)} />)\r\n        } else {\r\n            return persons.map(person => <Person key={person.id} name={person.name} number={person.number} handleDeleteClick={() => handleDeleteClick(person)} />)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {rows()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response)\r\n}\r\n\r\nconst add = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, add, update, remove }","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from './services/persons'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterTerm, setFilterTerm] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [notificationClass, setNotificationClass] = useState('success')\n\n    const hook = () => {\n        console.log('effect')\n        personService\n            .getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    }\n    useEffect(hook, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        // empty field check\n        if (newName === '' || newNumber === '' ) {\n            alert('All fields are required for new entries.')\n            return\n        }\n\n        // existing contact check\n        let isInPhonebook = false\n        persons.forEach((person) => {\n            if( person.name === newName )\n                isInPhonebook = true\n        });\n        if (isInPhonebook) {\n            if (window.confirm(`${newName} is already added to the Phonebook. Do you want to replace the number with a new one?`)) {\n                const personObj = persons.find(person => person.name === newName)\n                personObj.number = newNumber\n                personService\n                    .update(personObj.id, personObj)\n                    .then(returnedPerson => {\n                        console.log(returnedPerson)\n                        setPersons(persons.map(person => (person.id === personObj.id ? Object.assign(person, personObj) : person)))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n                    .catch(error => {\n                        setNotificationClass('error')\n                        setNotificationMessage(\n                            `Information of ${personObj.name} has already been removed.`\n                        )\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                        }, 3000)\n                        setPersons(persons.map(person => (person.id === personObj.id ? Object.assign(person, personObj) : person)))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n            } else {\n                setNewName('')\n                setNewNumber('')\n            }\n            return\n            \n        }\n        const personObject = {\n            name: newName,\n            number: newNumber,\n            id: persons.length + 1\n        }\n        personService\n            .add( personObject )\n            .then( returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n                setNewName('')\n                setNewNumber('')\n                setNotificationClass('success')\n                setNotificationMessage(\n                    `Added ${returnedPerson.name} to phonebook.`\n                )\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                }, 3000)\n            })\n            .catch(error => {\n                console.log(error.response.data)\n                setNotificationClass('error')\n                setNotificationMessage(\n                    `${error.response.data.error}`\n                )\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                }, 3000)\n            })\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilterTerm(event.target.value)\n    }\n\n    const handleDeleteClick = (personObj) => {\n        if (window.confirm(`Are you sure you want to delete ${personObj.name} from the phonebook?`)) {\n            personService\n                .remove(personObj.id)\n                .then(response => {\n                    console.log(response);\n                    setPersons(persons.filter(person => person.id !== personObj.id))\n                    setNotificationClass('success')\n                    setNotificationMessage(\n                        `${personObj.name} has been removed from the phonebook.`\n                    )\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 3000)\n                })\n                .catch(error => {\n                    console.log(error)\n                    setNotificationClass('error')\n                    setNotificationMessage(\n                        `Information of ${personObj.name} has already been removed.`\n                    )\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 3000)\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notificationMessage} className={notificationClass}/>\n            <Filter\n                filterTerm={filterTerm}\n                handleFilterChange={handleFilterChange}/>\n\n            <h3>Add New</h3>\n            <PersonForm \n                addPerson={addPerson} \n                newName={newName} \n                handleNameChange={handleNameChange} \n                newNumber={newNumber} \n                handleNumberChange={handleNumberChange}/>\n\n            <h3>Numbers</h3>\n            <Persons \n                persons={persons}\n                filterTerm={filterTerm}\n                handleDeleteClick={handleDeleteClick}\n            />\n\n    </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}